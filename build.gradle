group groupId
version libVersion
description = libDescription

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokkaVersion"
    }
}

apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'maven'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

    testImplementation "junit:junit:$junitVersion"
}

test {
    testLogging {
        events "passed", "skipped", "failed"
        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true

        afterSuite { desc, result ->
            def output = "results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
            def repeatLength = output.length()
            println('\n' + ('=' * repeatLength) + '\n' + desc.name + '\n' + output + '\n' + ('=' * repeatLength))
        }
    }
}

dokka {
    moduleName = libDescription
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
}

task sourcesJar(type: Jar, dependsOn: project.classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task dokkaJar(type: Jar, dependsOn: project.dokka) {
    classifier = 'javadoc'
    from dokka
}

artifacts {
    archives sourcesJar
    archives dokkaJar
}

uploadArchives {
    repositories.mavenDeployer {
        pom.groupId = "$groupId"
        pom.artifactId = "$artifactId"
        pom.version = "$libVersion"

        repository(url: "file://${buildDir}/release/$libVersion")
    }
}
